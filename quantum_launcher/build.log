       Fresh unicode-ident v1.0.18
       Fresh cfg-if v1.0.1
       Fresh autocfg v1.4.0
       Fresh bitflags v2.9.1
       Fresh smallvec v1.15.1
       Fresh log v0.4.27
       Fresh memchr v2.7.5
       Fresh pin-project-lite v0.2.16
       Fresh shlex v1.3.0
       Fresh equivalent v1.0.2
       Fresh hashbrown v0.15.4
       Fresh futures-core v0.3.31
       Fresh proc-macro2 v1.0.95
       Fresh cc v1.2.27
       Fresh indexmap v2.9.0
       Fresh pkg-config v0.3.32
       Fresh bytes v1.10.1
       Fresh tracing-core v0.1.34
       Fresh libloading v0.8.8
       Fresh futures-sink v0.3.31
       Fresh futures-io v0.3.31
       Fresh simd-adler32 v0.3.7
       Fresh futures-task v0.3.31
       Fresh quote v1.0.40
       Fresh futures-channel v0.3.31
       Fresh pin-utils v0.1.0
       Fresh version_check v0.9.5
       Fresh siphasher v1.0.1
       Fresh stable_deref_trait v1.2.0
       Fresh linux-raw-sys v0.4.15
       Fresh adler2 v2.0.1
       Fresh crc32fast v1.4.2
       Fresh slab v0.4.9
       Fresh num-traits v0.2.19
       Fresh socket2 v0.5.10
       Fresh mio v1.0.4
       Fresh signal-hook-registry v1.4.5
       Fresh crossbeam-utils v0.8.21
       Fresh miniz_oxide v0.8.9
       Fresh zlib-rs v0.5.1
       Fresh phf_shared v0.11.3
       Fresh serde_derive v1.0.219
       Fresh tracing-attributes v0.1.29
       Fresh synstructure v0.13.2
       Fresh tokio-macros v2.5.0
       Fresh futures-macro v0.3.31
       Fresh bytemuck_derive v1.9.3
       Fresh zerocopy v0.8.25
       Fresh rustix v0.38.44
       Fresh thiserror-impl v1.0.69
       Fresh zerovec-derive v0.11.1
       Fresh displaydoc v0.2.5
       Fresh libz-rs-sys v0.5.1
       Fresh dlib v0.5.2
       Fresh percent-encoding v2.3.1
       Fresh serde v1.0.219
       Fresh tracing v0.1.41
       Fresh zerofrom-derive v0.1.6
       Fresh tokio v1.45.1
       Fresh futures-util v0.3.31
       Fresh yoke-derive v0.8.0
       Fresh bytemuck v1.23.1
       Fresh thiserror v1.0.69
       Fresh flate2 v1.1.2
       Fresh getrandom v0.3.3
       Fresh phf_generator v0.11.3
       Fresh linux-raw-sys v0.9.4
       Fresh writeable v0.6.1
       Fresh zerofrom v0.1.6
       Fresh litemap v0.8.0
       Fresh wayland-sys v0.31.6
       Fresh memmap2 v0.9.5
       Fresh scoped-tls v1.0.1
       Fresh downcast-rs v1.2.1
       Fresh crossbeam-epoch v0.9.18
       Fresh itoa v1.0.15
       Fresh yoke v0.8.0
       Fresh rustix v1.0.7
       Fresh wayland-backend v0.3.10
       Fresh crossbeam-deque v0.8.6
       Fresh wayland-scanner v0.31.6
       Fresh arrayvec v0.7.6
       Fresh num_cpus v1.17.0
       Fresh base64 v0.22.1
       Fresh tinyvec_macros v0.1.1
       Fresh static_assertions v1.1.0
       Fresh winnow v0.7.11
       Fresh zerovec v0.11.2
       Fresh zerotrie v0.2.2
       Fresh icu_normalizer_data v2.0.0
       Fresh icu_properties_data v2.0.1
       Fresh rayon-core v1.12.1
       Fresh wayland-client v0.31.10
       Fresh cfg_aliases v0.2.1
       Fresh raw-window-handle v0.6.2
       Fresh tinyvec v1.9.0
       Fresh futures-executor v0.3.31
       Fresh phf_macros v0.11.3
       Fresh form_urlencoded v1.2.1
       Fresh either v1.15.0
       Fresh fnv v1.0.7
       Fresh tinystr v0.8.1
       Fresh potential_utf v0.1.2
       Fresh utf8_iter v1.0.4
       Fresh rayon v1.10.0
       Fresh futures v0.3.31
       Fresh ahash v0.8.12
       Fresh phf v0.11.3
       Fresh http v1.3.1
       Fresh serde_spanned v0.6.9
       Fresh toml_datetime v0.6.11
       Fresh fdeflate v0.3.7
       Fresh toml_write v0.1.2
       Fresh icu_locale_core v2.0.0
       Fresh icu_collections v2.0.0
       Fresh bitflags v1.3.2
       Fresh scopeguard v1.2.0
       Fresh toml_edit v0.22.27
       Fresh byteorder v1.5.0
       Fresh cfg_aliases v0.1.1
       Fresh roxmltree v0.20.0
       Fresh zeroize v1.8.1
       Fresh http-body v1.0.1
       Fresh ttf-parser v0.21.1
       Fresh untrusted v0.9.0
       Fresh icu_provider v2.0.0
       Fresh lock_api v0.4.13
       Fresh png v0.17.16
       Fresh parking_lot_core v0.9.11
       Fresh rustls-pki-types v1.12.0
       Fresh slotmap v1.0.7
       Fresh fontconfig-parser v0.5.8
       Fresh rustc-hash v1.1.0
       Fresh weezl v0.1.10
       Fresh allocator-api2 v0.2.21
       Fresh float-cmp v0.9.0
       Fresh ring v0.17.14
       Fresh jpeg-decoder v0.3.1
       Fresh font-types v0.7.3
       Fresh icu_normalizer v2.0.0
       Fresh icu_properties v2.0.1
       Fresh parking_lot v0.12.4
       Fresh hashbrown v0.14.5
       Fresh strict-num v0.1.1
       Fresh libm v0.2.15
       Fresh tokio-util v0.7.15
       Fresh unicode-script v0.5.7
       Fresh arrayref v0.3.9
       Fresh try-lock v0.2.5
       Fresh unicode-bidi-mirroring v0.2.0
       Fresh unicode-properties v0.1.3
       Fresh color_quant v1.1.0
       Fresh idna_adapter v1.2.1
       Fresh unicode-ccc v0.2.0
       Fresh tower-service v0.3.3
       Fresh by_address v1.2.1
       Fresh atomic-waker v1.1.2
       Fresh gif v0.13.1
       Fresh want v0.3.1
       Fresh httparse v1.10.1
       Fresh tiny-skia-path v0.11.4
       Fresh rustls-webpki v0.103.3
       Fresh read-fonts v0.22.7
       Fresh approx v0.5.1
       Fresh zune-inflate v0.2.54
       Fresh half v2.6.0
       Fresh idna v1.0.3
       Fresh rustybuzz v0.14.1
       Fresh h2 v0.4.10
       Fresh palette_derive v0.7.6
       Fresh rustc-hash v2.1.1
       Fresh fast-srgb8 v1.0.0
       Fresh subtle v2.6.1
       Fresh bit_field v0.10.2
       Fresh smol_str v0.2.2
       Fresh lebe v0.5.2
       Fresh fastrand v2.3.0
       Fresh unicode-bidi v0.3.18
       Fresh as-raw-xcb-connection v1.0.1
       Fresh skrifa v0.22.3
       Fresh tiff v0.9.1
       Fresh wayland-protocols v0.32.8
       Fresh url v2.5.4
       Fresh palette v0.7.6
       Fresh rustls v0.23.27
       Fresh exr v1.73.0
       Fresh hyper v1.6.0
       Fresh polling v3.8.0
       Fresh qoi v0.4.1
       Fresh ppv-lite86 v0.2.21
       Fresh sync_wrapper v1.0.2
       Fresh bit-vec v0.6.3
       Fresh x11rb-protocol v0.13.1
       Fresh web-time v1.1.0
       Fresh ryu v1.0.20
       Fresh tower-layer v0.3.3
       Fresh termcolor v1.4.1
       Fresh zeno v0.2.3
       Fresh yazi v0.1.6
       Fresh ipnet v2.11.0
       Fresh glam v0.25.0
       Fresh unicode-width v0.1.14
       Fresh ttf-parser v0.20.0
       Fresh tokio-rustls v0.26.2
       Fresh calloop v0.13.0
       Fresh image v0.24.9
       Fresh tower v0.5.2
       Fresh bit-set v0.5.3
       Fresh x11rb v0.13.1
       Fresh tiny-skia v0.11.4
       Fresh iced_core v0.13.2
       Fresh codespan-reporting v0.11.1
       Fresh swash v0.1.19
       Fresh hyper-util v0.1.14
       Fresh fontdb v0.16.2
       Fresh webpki-roots v1.0.0
       Fresh proc-macro-crate v3.3.0
       Fresh enumflags2_derive v0.7.12
       Fresh spirv v0.3.0+sdk-1.3.268.0
       Fresh gpu-descriptor-types v0.1.2
       Fresh encoding_rs v0.8.35
       Fresh gpu-alloc-types v0.3.0
       Fresh libloading v0.7.4
       Fresh xkeysym v0.2.1
       Fresh unicode-linebreak v0.1.5
       Fresh unicode-xid v0.2.6
       Fresh hexf-parse v0.2.1
       Fresh sys-locale v0.3.2
       Fresh rangemap v1.5.1
       Fresh iri-string v0.7.8
       Fresh unicode-segmentation v1.12.0
       Fresh cursor-icon v1.2.0
       Fresh xcursor v0.3.8
       Fresh bumpalo v3.18.1
       Fresh self_cell v1.2.0
       Fresh tower-http v0.6.6
       Fresh ash v0.37.3+1.3.251
       Fresh naga v0.19.2
       Fresh wayland-cursor v0.31.10
       Fresh zopfli v0.8.2
       Fresh wayland-csd-frame v0.3.0
       Fresh gpu-alloc v0.6.0
       Fresh zvariant_derive v5.5.3
       Fresh iced_futures v0.13.2
       Fresh enumflags2 v0.7.12
       Fresh cosmic-text v0.12.1
       Fresh hyper-rustls v0.27.7
       Fresh khronos-egl v6.0.0
       Fresh gpu-descriptor v0.2.4
       Fresh serde_json v1.0.140
       Fresh calloop-wayland-source v0.3.0
       Fresh serde_urlencoded v0.7.1
       Fresh wayland-protocols-wlr v0.3.8
       Fresh http-body-util v0.1.3
       Fresh kurbo v0.11.2
       Fresh num-integer v0.1.46
       Fresh thiserror-impl v2.0.12
       Fresh wgpu-types v0.19.2
       Fresh profiling v1.0.16
       Fresh mime v0.3.17
       Fresh glow v0.13.1
       Fresh option-ext v0.2.0
       Fresh endi v1.1.0
       Fresh linux-raw-sys v0.6.5
       Fresh renderdoc-sys v1.1.0
       Fresh mutate_once v0.1.1
       Fresh smithay-client-toolkit v0.19.2
       Fresh svgtypes v0.15.3
       Fresh thiserror v2.0.12
       Fresh crunchy v0.2.3
       Fresh drm-sys v0.7.0
       Fresh wgpu-hal v0.19.5
       Fresh dirs-sys v0.5.0
       Fresh kamadak-exif v0.5.5
       Fresh reqwest v0.12.20
       Fresh libc v0.2.173
       Fresh zip v4.0.0
       Fresh fontdb v0.18.0
       Fresh euclid v0.22.11
       Fresh simplecss v0.2.2
       Fresh crc-catalog v2.4.0
       Fresh svg_fmt v0.4.5
       Fresh new_debug_unreachable v1.0.6
       Fresh unicode-vo v0.1.0
       Fresh xmlwriter v0.1.0
       Fresh pico-args v0.5.0
       Fresh same-file v1.0.6
       Fresh data-url v0.3.1
       Fresh parking v2.2.1
       Fresh imagesize v0.12.0
       Fresh iana-time-zone v0.1.63
       Fresh tiny-keccak v2.0.2
       Fresh zip-extract v0.4.0
       Fresh drm-ffi v0.8.0
       Fresh getrandom v0.2.16
       Fresh drm-fourcc v2.2.0
       Fresh usvg v0.42.0
       Fresh walkdir v2.5.0
       Fresh crc v3.3.0
       Fresh chrono v0.4.41
       Fresh wgpu-core v0.19.4
       Fresh semver v1.0.26
       Fresh ql_reqwest v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_reqwest)
       Fresh iced_graphics v0.13.0
       Fresh dirs v6.0.0
       Fresh num-bigint v0.4.6
       Fresh xattr v1.5.0
       Fresh rand_core v0.6.4
       Fresh string_cache_codegen v0.5.4
       Fresh phf_codegen v0.11.3
       Fresh rgb v0.8.50
       Fresh concurrent-queue v2.5.0
       Fresh syn v2.0.103
       Fresh filetime v0.2.25
       Fresh ttf-parser v0.25.1
       Fresh colored v3.0.0
       Fresh ctor-lite v0.1.0
       Fresh once_cell v1.21.3
       Fresh mac v0.1.1
       Fresh num-rational v0.4.2
       Fresh wgpu v0.19.4
       Fresh libdbus-sys v0.2.5
       Fresh lzma-rs v0.3.0
       Fresh zvariant_utils v3.2.0
       Fresh resvg v0.42.0
       Fresh tiny-xlib v0.2.4
       Fresh event-listener v5.4.0
       Fresh futf v0.1.5
       Fresh const-random-macro v0.1.16
       Fresh owned_ttf_parser v0.25.0
       Fresh ql_core v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_core)
       Fresh tar v0.4.44
       Fresh rand_chacha v0.3.1
       Fresh drm v0.12.0
       Fresh etagere v0.2.15
       Fresh num-iter v0.1.45
       Fresh num-complex v0.4.6
       Fresh ab_glyph_rasterizer v0.1.8
       Fresh precomputed-hash v0.1.1
       Fresh lru v0.12.5
       Fresh utf-8 v0.7.6
       Fresh memoffset v0.9.1
       Fresh rand v0.8.5
       Fresh zvariant v5.5.3
       Fresh const-random v0.1.18
       Fresh ql_java_handler v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_java_handler)
       Fresh event-listener-strategy v0.5.4
       Fresh string_cache v0.8.9
       Fresh num v0.4.3
       Fresh ab_glyph v0.2.29
       Fresh iced_glyphon v0.6.0
       Fresh tendril v0.4.3
       Fresh softbuffer v0.4.6
       Fresh dbus v0.9.7
       Fresh guillotiere v0.6.2
       Fresh smithay-clipboard v0.7.2
       Fresh kurbo v0.10.4
       Fresh rand_core v0.9.3
       Fresh aho-corasick v1.1.3
       Fresh utf8parse v0.2.2
       Fresh unicode-width v0.2.1
       Fresh regex-syntax v0.8.5
       Fresh markup5ever v0.12.1
       Fresh x11-dl v2.21.0
       Fresh iced_tiny_skia v0.13.0
       Fresh sctk-adwaita v0.10.1
       Fresh zbus_macros v5.7.1
       Fresh clipboard_wayland v0.2.2
       Fresh dbus-secret-service v4.0.3
       Fresh nix v0.30.1
       Fresh portable-atomic v1.11.1
       Fresh rand_chacha v0.9.0
       Fresh iced_wgpu v0.13.5
       Fresh anstyle-parse v0.2.7
       Fresh regex-automata v0.4.9
       Fresh console v0.15.11
       Fresh zbus_names v4.2.0
       Fresh async-broadcast v0.7.2
       Fresh dlv-list v0.5.2
       Fresh rustc_version v0.4.1
       Fresh futures-lite v2.6.0
       Fresh iced_runtime v0.13.2
       Fresh xkbcommon-dl v0.4.2
       Fresh clipboard_x11 v0.4.2
       Fresh wayland-protocols-plasma v0.3.8
       Fresh toml v0.8.23
       Fresh serde_repr v0.1.20
       Fresh async-trait v0.1.88
       Fresh linux-keyutils v0.2.4
       Fresh ordered-stream v0.2.0
       Fresh anstyle v1.0.11
       Fresh hex v0.4.3
       Fresh colorchoice v1.0.4
       Fresh is_terminal_polyfill v1.70.1
       Fresh number_prefix v0.4.0
       Fresh anstyle-query v1.1.3
       Fresh dpi v0.1.2
       Fresh ordered-multimap v0.7.3
       Fresh embed-resource v3.0.3
       Fresh window_clipboard v0.4.1
       Fresh regex v1.11.1
       Fresh iced_renderer v0.13.0
       Fresh rand v0.9.1
       Fresh keyring v3.6.2
       Fresh indicatif v0.17.11
       Fresh zbus v5.7.1
       Fresh winit v0.30.11
       Fresh anstream v0.6.19
       Fresh quick-xml v0.37.5
       Fresh unicode-normalization v0.1.24
       Fresh strsim v0.11.1
       Fresh any_ascii v0.3.2
       Fresh deunicode v1.6.2
       Fresh trim-in-place v0.1.7
       Fresh clap_lex v0.7.5
       Fresh ql_mod_manager v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_mod_manager)
       Fresh html5ever v0.27.0
       Fresh ashpd v0.11.0
       Fresh rust-ini v0.21.1
       Fresh caseless v0.2.2
       Fresh iced_winit v0.13.0
       Fresh clap_builder v4.5.40
       Fresh slug v0.1.6
       Fresh ql_instances v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_instances)
       Fresh iced_widget v0.13.4
       Fresh xml5ever v0.18.1
       Fresh ql_servers v0.0.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_servers)
       Fresh tempfile v3.20.0
       Fresh urlencoding v2.1.3
       Fresh typed-arena v2.0.2
       Fresh home v0.5.11
       Fresh unicode_categories v0.1.1
       Fresh entities v1.0.1
       Fresh pollster v0.4.0
       Dirty quantum_launcher v0.4.1 (/home/sreehari/Projects/bug-fix/quantumlauncher/quantum_launcher): the precalculated components changed
   Compiling quantum_launcher v0.4.1 (/home/sreehari/Projects/bug-fix/quantumlauncher/quantum_launcher)
       Fresh clap v4.5.40
       Fresh paste v1.0.15
       Fresh iced v0.13.1
       Fresh ql_packager v0.1.0 (/home/sreehari/Projects/bug-fix/quantumlauncher/crates/ql_packager)
       Fresh markup5ever_rcdom v0.3.0
       Fresh terminal_size v0.4.2
     Running `/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/quantum_launcher-6e18affe0d91fe27/build-script-build`
       Fresh comrak v0.39.0
       Fresh webbrowser v0.8.15
       Fresh rfd v0.15.3
     Running `/home/sreehari/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name quantum_launcher --edition=2021 quantum_launcher/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="default"' --cfg 'feature="tiny_skia"' --cfg 'feature="wgpu"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("debug", "default", "simulate_linux_arm64", "tiny_skia", "wgpu"))' -C metadata=5bc06ce2e063ff84 -C extra-filename=-6237bf874b03873f --out-dir /home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps -C incremental=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/incremental -L dependency=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps --extern chrono=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libchrono-a5d98db66ac2e867.rlib --extern clap=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libclap-af30c02d0a68895e.rlib --extern colored=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libcolored-e019f4d22b7e989b.rlib --extern comrak=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libcomrak-028dd55227879897.rlib --extern html5ever=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libhtml5ever-fe2cfce8f19b5c5d.rlib --extern iced=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libiced-709564cd62bd52e4.rlib --extern image=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libimage-eb41199100bdf26a.rlib --extern markup5ever_rcdom=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libmarkup5ever_rcdom-3a5da5ccd3b1d692.rlib --extern paste=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libpaste-d1a070d01ae96c50.so --extern ql_core=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_core-32095810fea4154e.rlib --extern ql_instances=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_instances-8443dead4c1b54a1.rlib --extern ql_mod_manager=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_mod_manager-b4e06fd7c8f6dfc0.rlib --extern ql_packager=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_packager-d225f9ed3d29f3db.rlib --extern ql_servers=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_servers-bb493a900c4a4257.rlib --extern rfd=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/librfd-8b0641c0883d7419.rlib --extern serde=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libserde-6c34bb0738b7ecef.rlib --extern serde_json=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libserde_json-383d52f2eb8cba5d.rlib --extern terminal_size=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libterminal_size-e933185ad420bedc.rlib --extern tokio=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libtokio-b3e063ab55ce5f4a.rlib --extern webbrowser=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libwebbrowser-dc5938ccd1606ea1.rlib -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/ring-28043c2698e2304b/out -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/libdbus-sys-f8ef4b28718f446c/out -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/libdbus-sys-f8ef4b28718f446c/out`
error[E0252]: the name `MenuLoginLittleSkinDeviceCode` is defined multiple times
  --> quantum_launcher/src/message_update/accounts.rs:13:5
   |
9  |         AccountMessage, Launcher, MenuLoginElyBy, MenuLoginLittleSkin, MenuLoginMS, Message, ProgressBar, State, NEW_ACCOUNT_NAME, OFFLINE_ACCOUNT_NAME, MenuLoginLittleSkinDeviceCode
   |                                                                                                                                                          ----------------------------- previous import of the type `MenuLoginLittleSkinDeviceCode` here
...
13 | use crate::state::menu::MenuLoginLittleSkinDeviceCode;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ `MenuLoginLittleSkinDeviceCode` reimported here
   |
   = note: `MenuLoginLittleSkinDeviceCode` must be defined only once in the type namespace of this module

error[E0432]: unresolved import `state::Message`
  --> quantum_launcher/src/main.rs:32:36
   |
32 | use state::{get_entries, Launcher, Message, ServerProcess};
   |                                    ^^^^^^^
   |                                    |
   |                                    no `Message` in `state`
   |                                    help: a similar name exists in the module: `message`
   |
   = help: consider importing this variant instead:
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `super::ManageModsMessage`, `super::Message`
  --> quantum_launcher/src/state/menu.rs:22:13
   |
22 | use super::{ManageModsMessage, Message, ProgressBar};
   |             ^^^^^^^^^^^^^^^^^  ^^^^^^^
   |             |                  |
   |             |                  no `Message` in `state`
   |             |                  help: a similar name exists in the module: `message`
   |             no `ManageModsMessage` in `state`
   |
   = help: consider importing this enum instead:
           crate::state::message::ManageModsMessage
   = help: consider importing one of these items instead:
           crate::Message
           crate::state::LogLine::Message
           crate::state::message::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::ManageModsMessage`, `crate::state::Message`
  --> quantum_launcher/src/update.rs:11:28
   |
11 |     LaunchTabId, Launcher, ManageModsMessage, MenuExportInstance, MenuLaunch, MenuLauncherUpdate,
   |                            ^^^^^^^^^^^^^^^^^ no `ManageModsMessage` in `state`
12 |     MenuServerCreate, MenuWelcome, Message, ProgressBar, ServerProcess, State,
   |                                    ^^^^^^^
   |                                    |
   |                                    no `Message` in `state`
   |                                    help: a similar name exists in the module: `message`
   |
note: enum `crate::state::message::ManageModsMessage` exists but is inaccessible
  --> quantum_launcher/src/state/message.rs:76:1
   |
76 | pub enum ManageModsMessage {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::AccountMessage`, `crate::state::Message`
   --> quantum_launcher/src/view.rs:7:13
    |
7   |     state::{AccountMessage, Launcher, Message, State},
    |             ^^^^^^^^^^^^^^            ^^^^^^^
    |             |                         |
    |             |                         no `Message` in `state`
    |             |                         help: a similar name exists in the module: `message`
    |             no `AccountMessage` in `state`
    |
note: enum `crate::state::message::AccountMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:158:1
    |
158 | pub enum AccountMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::CreateInstanceMessage`, `crate::state::InstallModsMessage`, `crate::state::LauncherSettingsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/mod.rs:8:9
    |
8   |         CreateInstanceMessage, InstallModsMessage, LauncherSettingsMessage, ManageModsMessage,
    |         ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `ManageModsMessage` in `state`
    |         |                      |                   |
    |         |                      |                   no `LauncherSettingsMessage` in `state`
    |         |                      no `InstallModsMessage` in `state`
    |         no `CreateInstanceMessage` in `state`
9   |         MenuCreateInstance, MenuCurseforgeManualDownload, MenuLauncherSettings, MenuLauncherUpdate,
10  |         MenuServerCreate, Message, ProgressBar,
    |                           ^^^^^^^
    |                           |
    |                           no `Message` in `state`
    |                           help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::CreateInstanceMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:38:1
    |
38  | pub enum CreateInstanceMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:115:1
    |
115 | pub enum InstallModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::LauncherSettingsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:200:1
    |
200 | pub enum LauncherSettingsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::ManageModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:76:1
    |
76  | pub enum ManageModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::AccountMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/changelog.rs:11:13
    |
11  |     state::{AccountMessage, MenuWelcome, Message},
    |             ^^^^^^^^^^^^^^               ^^^^^^^
    |             |                            |
    |             |                            no `Message` in `state`
    |             |                            help: a similar name exists in the module: `message`
    |             no `AccountMessage` in `state`
    |
note: enum `crate::state::message::AccountMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:158:1
    |
158 | pub enum AccountMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditInstanceMessage`, `crate::state::Message`
  --> quantum_launcher/src/menu_renderer/edit_instance.rs:7:13
   |
7  |     state::{EditInstanceMessage, MenuEditInstance, Message},
   |             ^^^^^^^^^^^^^^^^^^^                    ^^^^^^^
   |             |                                      |
   |             |                                      no `Message` in `state`
   |             |                                      help: a similar name exists in the module: `message`
   |             no `EditInstanceMessage` in `state`
   |
note: enum `crate::state::message::EditInstanceMessage` exists but is inaccessible
  --> quantum_launcher/src/state/message.rs:55:1
   |
55 | pub enum EditInstanceMessage {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::AccountMessage`, `crate::state::CreateInstanceMessage`, `crate::state::LauncherSettingsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/launch.rs:11:9
    |
11  |         AccountMessage, CreateInstanceMessage, InstanceLog, LaunchTabId, Launcher,
    |         ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^ no `CreateInstanceMessage` in `state`
    |         |
    |         no `AccountMessage` in `state`
12  |         LauncherSettingsMessage, ManageModsMessage, MenuLaunch, Message, State, NEW_ACCOUNT_NAME,
    |         ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^              ^^^^^^^
    |         |                        |                              |
    |         |                        |                              no `Message` in `state`
    |         |                        |                              help: a similar name exists in the module: `message`
    |         |                        no `ManageModsMessage` in `state`
    |         no `LauncherSettingsMessage` in `state`
    |
note: enum `crate::state::message::AccountMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:158:1
    |
158 | pub enum AccountMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::CreateInstanceMessage
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::LauncherSettingsMessage
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::ManageModsMessage
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved import `crate::state::Message`
  --> quantum_launcher/src/menu_renderer/log.rs:53:23
   |
53 |     state::{Launcher, Message},
   |                       ^^^^^^^
   |                       |
   |                       no `Message` in `state`
   |                       help: a similar name exists in the module: `message`
   |
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::AccountMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/login.rs:5:13
    |
5   |     state::{AccountMessage, MenuLoginElyBy, MenuLoginLittleSkin, MenuLoginMS, Message, NEW_ACCOUNT_NAME},
    |             ^^^^^^^^^^^^^^                                                    ^^^^^^^
    |             |                                                                 |
    |             |                                                                 no `Message` in `state`
    |             no `AccountMessage` in `state`                                    help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::AccountMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:158:1
    |
158 | pub enum AccountMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::InstallFabricMessage`, `crate::state::InstallOptifineMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/mods/install_loader.rs:8:9
    |
8   |         InstallFabricMessage, InstallOptifineMessage, ManageModsMessage, MenuInstallFabric,
    |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `ManageModsMessage` in `state`
    |         |                     |
    |         |                     no `InstallOptifineMessage` in `state`
    |         no `InstallFabricMessage` in `state`
9   |         MenuInstallForge, MenuInstallOptifine, Message,
    |                                                ^^^^^^^
    |                                                |
    |                                                no `Message` in `state`
    |                                                help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::InstallFabricMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:29:1
    |
29  | pub enum InstallFabricMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallOptifineMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:134:1
    |
134 | pub enum InstallOptifineMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::ManageModsMessage
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved import `crate::state::Message`
 --> quantum_launcher/src/menu_renderer/mods/instance_package.rs:6:33
  |
6 |     state::{MenuExportInstance, Message},
  |                                 ^^^^^^^
  |                                 |
  |                                 no `Message` in `state`
  |                                 help: a similar name exists in the module: `message`
  |
  = help: consider importing one of these items instead:
          crate::Message
          ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::ManageJarModsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/mods/jarmods.rs:7:13
    |
7   |     state::{ManageJarModsMessage, ManageModsMessage, MenuEditJarMods, Message, SelectedState},
    |             ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^                   ^^^^^^^
    |             |                     |                                   |
    |             |                     |                                   no `Message` in `state`
    |             |                     |                                   help: a similar name exists in the module: `message`
    |             |                     no `ManageModsMessage` in `state`
    |             no `ManageJarModsMessage` in `state`
    |
note: enum `crate::state::message::ManageJarModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:102:1
    |
102 | pub enum ManageJarModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::ManageModsMessage
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditPresetsMessage`, `crate::state::InstallFabricMessage`, `crate::state::InstallModsMessage`, `crate::state::InstallOptifineMessage`, `crate::state::ManageJarModsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/mods/mods_manage.rs:8:9
    |
8   |         EditPresetsMessage, InstallFabricMessage, InstallModsMessage, InstallOptifineMessage,
    |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `InstallOptifineMessage` in `state`
    |         |                   |                     |
    |         |                   |                     no `InstallModsMessage` in `state`
    |         |                   no `InstallFabricMessage` in `state`
    |         no `EditPresetsMessage` in `state`
9   |         ManageJarModsMessage, ManageModsMessage, MenuEditMods, Message, ModListEntry,
    |         ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^                ^^^^^^^
    |         |                     |                                |
    |         |                     |                                no `Message` in `state`
    |         |                     |                                help: a similar name exists in the module: `message`
    |         |                     no `ManageModsMessage` in `state`
    |         no `ManageJarModsMessage` in `state`
    |
note: enum `crate::state::message::EditPresetsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:141:1
    |
141 | pub enum EditPresetsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallFabricMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:29:1
    |
29  | pub enum InstallFabricMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::InstallModsMessage
note: enum `crate::state::message::InstallOptifineMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:134:1
    |
134 | pub enum InstallOptifineMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::ManageJarModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:102:1
    |
102 | pub enum ManageJarModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::ManageModsMessage
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::InstallModsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
 --> quantum_launcher/src/menu_renderer/mods/mods_store/mod.rs:8:25
  |
8 |     state::{ImageState, InstallModsMessage, ManageModsMessage, MenuModsDownload, Message},
  |                         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^                    ^^^^^^^
  |                         |                   |                                    |
  |                         |                   |                                    no `Message` in `state`
  |                         |                   |                                    help: a similar name exists in the module: `message`
  |                         |                   no `ManageModsMessage` in `state`
  |                         no `InstallModsMessage` in `state`
  |
  = help: consider importing this unresolved item through its public re-export instead:
          crate::menu_renderer::InstallModsMessage
  = help: consider importing this unresolved item through its public re-export instead:
          crate::menu_renderer::ManageModsMessage
  = help: consider importing one of these items instead:
          crate::Message
          ql_instances::LogLine::Message

error[E0432]: unresolved import `crate::state::Message`
  --> quantum_launcher/src/menu_renderer/mods/mods_store/html.rs:13:43
   |
13 |     state::{ImageState, MenuModsDownload, Message},
   |                                           ^^^^^^^
   |                                           |
   |                                           no `Message` in `state`
   |                                           help: a similar name exists in the module: `message`
   |
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved import `crate::state::Message`
  --> quantum_launcher/src/menu_renderer/mods/mods_store/markdown.rs:23:43
   |
23 |     state::{ImageState, MenuModsDownload, Message},
   |                                           ^^^^^^^
   |                                           |
   |                                           no `Message` in `state`
   |                                           help: a similar name exists in the module: `message`
   |
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditPresetsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/menu_renderer/mods/presets.rs:10:9
    |
10  |         EditPresetsMessage, ManageModsMessage, MenuEditPresets, MenuEditPresetsInner, Message,
    |         ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^                                         ^^^^^^^
    |         |                   |                                                         |
    |         |                   |                                                         no `Message` in `state`
    |         |                   no `ManageModsMessage` in `state`                         help: a similar name exists in the module: `message`
    |         no `EditPresetsMessage` in `state`
    |
note: enum `crate::state::message::EditPresetsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:141:1
    |
141 | pub enum EditPresetsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing this unresolved item through its public re-export instead:
            crate::menu_renderer::ManageModsMessage
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditPresetsMessage`, `crate::state::ManageModsMessage`
   --> quantum_launcher/src/message_handler/mod.rs:24:24
    |
24  |         ClientProcess, EditPresetsMessage, ManageModsMessage, MenuEditInstance, MenuEditMods,
    |                        ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `ManageModsMessage` in `state`
    |                        |
    |                        no `EditPresetsMessage` in `state`
    |
note: enum `crate::state::message::EditPresetsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:141:1
    |
141 | pub enum EditPresetsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::ManageModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:76:1
    |
76  | pub enum ManageModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible

error[E0432]: unresolved import `crate::state::Message`
 --> quantum_launcher/src/message_handler/iced_event.rs:9:209
  |
9 | ...Skin, MenuLoginMS, MenuServerCreate, Message, State
  |                                         ^^^^^^^
  |                                         |
  |                                         no `Message` in `state`
  |                                         help: a similar name exists in the module: `message`
  |
  = help: consider importing one of these items instead:
          crate::Message
          ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::AccountMessage`, `crate::state::Message`
   --> quantum_launcher/src/message_update/accounts.rs:9:9
    |
9   |         AccountMessage, Launcher, MenuLoginElyBy, MenuLoginLittleSkin, MenuLoginMS, Message, ProgressBar, State, NEW_ACCOUNT_NAME, OFFLIN...
    |         ^^^^^^^^^^^^^^                                                              ^^^^^^^
    |         |                                                                           |
    |         |                                                                           no `Message` in `state`
    |         no `AccountMessage` in `state`                                              help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::AccountMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:158:1
    |
158 | pub enum AccountMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::CreateInstanceMessage`, `crate::state::Message`
  --> quantum_launcher/src/message_update/create_instance.rs:5:5
   |
5  |     CreateInstanceMessage, Launcher, MenuCreateInstance, Message, ProgressBar, State,
   |     ^^^^^^^^^^^^^^^^^^^^^                                ^^^^^^^
   |     |                                                    |
   |     |                                                    no `Message` in `state`
   |     |                                                    help: a similar name exists in the module: `message`
   |     no `CreateInstanceMessage` in `state`
   |
note: enum `crate::state::message::CreateInstanceMessage` exists but is inaccessible
  --> quantum_launcher/src/state/message.rs:38:1
   |
38 | pub enum CreateInstanceMessage {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditInstanceMessage`, `crate::state::Message`
  --> quantum_launcher/src/message_update/edit_instance.rs:6:26
   |
6  |     state::{get_entries, EditInstanceMessage, Launcher, MenuLaunch, Message, State},
   |                          ^^^^^^^^^^^^^^^^^^^                        ^^^^^^^
   |                          |                                          |
   |                          |                                          no `Message` in `state`
   |                          |                                          help: a similar name exists in the module: `message`
   |                          no `EditInstanceMessage` in `state`
   |
note: enum `crate::state::message::EditInstanceMessage` exists but is inaccessible
  --> quantum_launcher/src/state/message.rs:55:1
   |
55 | pub enum EditInstanceMessage {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
   = help: consider importing one of these items instead:
           crate::Message
           ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::ManageJarModsMessage`, `crate::state::ManageModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/message_update/manage_mods.rs:11:15
    |
11  |     Launcher, ManageJarModsMessage, ManageModsMessage, MenuCurseforgeManualDownload,
    |               ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^ no `ManageModsMessage` in `state`
    |               |
    |               no `ManageJarModsMessage` in `state`
12  |     MenuEditJarMods, MenuEditMods, Message, ProgressBar, SelectedState, State,
    |                                    ^^^^^^^
    |                                    |
    |                                    no `Message` in `state`
    |                                    help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::ManageJarModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:102:1
    |
102 | pub enum ManageJarModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::ManageModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:76:1
    |
76  | pub enum ManageModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditPresetsMessage`, `crate::state::Message`
   --> quantum_launcher/src/message_update/presets.rs:10:5
    |
10  |     EditPresetsMessage, Launcher, MenuCurseforgeManualDownload, MenuEditPresets,
    |     ^^^^^^^^^^^^^^^^^^ no `EditPresetsMessage` in `state`
11  |     MenuEditPresetsInner, Message, ProgressBar, SelectedState, State, PRESET_INNER_BUILD,
    |                           ^^^^^^^
    |                           |
    |                           no `Message` in `state`
    |                           help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::EditPresetsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:141:1
    |
141 | pub enum EditPresetsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::InstallFabricMessage`, `crate::state::InstallModsMessage`, `crate::state::InstallOptifineMessage`, `crate::state::LauncherSettingsMessage`, `crate::state::Message`
   --> quantum_launcher/src/message_update/mod.rs:21:15
    |
21  |         self, InstallFabricMessage, InstallModsMessage, InstallOptifineMessage, Launcher,
    |               ^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `InstallOptifineMessage` in `state`
    |               |                     |
    |               |                     no `InstallModsMessage` in `state`
    |               no `InstallFabricMessage` in `state`
22  |         LauncherSettingsMessage, MenuCurseforgeManualDownload, MenuInstallFabric,
    |         ^^^^^^^^^^^^^^^^^^^^^^^ no `LauncherSettingsMessage` in `state`
23  |         MenuInstallOptifine, Message, ProgressBar, State,
    |                              ^^^^^^^
    |                              |
    |                              no `Message` in `state`
    |                              help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::InstallFabricMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:29:1
    |
29  | pub enum InstallFabricMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:115:1
    |
115 | pub enum InstallModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallOptifineMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:134:1
    |
134 | pub enum InstallOptifineMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::LauncherSettingsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:200:1
    |
200 | pub enum LauncherSettingsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::InstallModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/mods_store.rs:14:20
    |
14  | use crate::state::{InstallModsMessage, Launcher, MenuModsDownload, Message, State};
    |                    ^^^^^^^^^^^^^^^^^^                              ^^^^^^^
    |                    |                                               |
    |                    |                                               no `Message` in `state`
    |                    |                                               help: a similar name exists in the module: `message`
    |                    no `InstallModsMessage` in `state`
    |
note: enum `crate::state::message::InstallModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:115:1
    |
115 | pub enum InstallModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0432]: unresolved imports `crate::state::EditInstanceMessage`, `crate::state::InstallModsMessage`, `crate::state::ManageJarModsMessage`, `crate::state::Message`
   --> quantum_launcher/src/tick.rs:15:5
    |
15  |     EditInstanceMessage, ImageState, InstallModsMessage, InstanceLog, LaunchTabId, Launcher,
    |     ^^^^^^^^^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^^ no `InstallModsMessage` in `state`
    |     |
    |     no `EditInstanceMessage` in `state`
16  |     ManageJarModsMessage, MenuCreateInstance, MenuEditMods, MenuEditPresetsInner,
    |     ^^^^^^^^^^^^^^^^^^^^ no `ManageJarModsMessage` in `state`
17  |     MenuExportInstance, MenuInstallFabric, MenuLaunch, MenuLoginMS, MenuModsDownload,
18  |     MenuServerCreate, Message, ModListEntry, ServerProcess, State,
    |                       ^^^^^^^
    |                       |
    |                       no `Message` in `state`
    |                       help: a similar name exists in the module: `message`
    |
note: enum `crate::state::message::EditInstanceMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:55:1
    |
55  | pub enum EditInstanceMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::InstallModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:115:1
    |
115 | pub enum InstallModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
note: enum `crate::state::message::ManageJarModsMessage` exists but is inaccessible
   --> quantum_launcher/src/state/message.rs:102:1
    |
102 | pub enum ManageJarModsMessage {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not accessible
    = help: consider importing one of these items instead:
            crate::Message
            ql_instances::LogLine::Message

error[E0412]: cannot find type `Message` in this scope
   --> quantum_launcher/src/state/mod.rs:238:83
    |
238 |     pub fn go_to_launch_screen<T: Display>(&mut self, message: Option<T>) -> Task<Message> {
    |                                                                                   ^^^^^^^ not found in this scope
    |
help: consider importing this enum
    |
1   + use crate::state::message::Message;
    |

error[E0433]: failed to resolve: use of undeclared type `Message`
   --> quantum_launcher/src/state/mod.rs:249:13
    |
249 |             Message::CoreListLoaded,
    |             ^^^^^^^ use of undeclared type `Message`
    |
help: consider importing this enum
    |
1   + use crate::state::message::Message;
    |

error[E0603]: module `login` is private
  --> quantum_launcher/src/view.rs:12:27
   |
12 | use crate::menu_renderer::login;
   |                           ^^^^^ private module
   |
note: the module `login` is defined here
  --> quantum_launcher/src/menu_renderer/mod.rs:23:1
   |
23 | mod login;
   | ^^^^^^^^^^

warning: unused import: `widget::pane_grid::state`
 --> quantum_launcher/src/message_handler/iced_event.rs:4:34
  |
4 |     keyboard::{key::Named, Key}, widget::pane_grid::state, Task
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `MenuLoginLittleSkinDeviceCode`
 --> quantum_launcher/src/message_update/accounts.rs:9:154
  |
9 | ...Bar, State, NEW_ACCOUNT_NAME, OFFLINE_ACCOUNT_NAME, MenuLoginLittleSkinDeviceCode
  |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> quantum_launcher/src/update.rs:154:49
    |
154 |             Message::LaunchEndedLog(Ok((status, name))) => {
    |                                                 ^^^^ doesn't have a size known at compile-time
    |
    = help: the trait `Sized` is not implemented for `str`
    = note: all local variables must have a statically known size
    = help: unsized locals are gated as an unstable feature

error[E0277]: the size for values of type `str` cannot be known at compilation time
   --> quantum_launcher/src/update.rs:154:37
    |
154 |             Message::LaunchEndedLog(Ok((status, name))) => {
    |                                     ^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time
    |
    = help: within `(ExitStatus, str)`, the trait `Sized` is not implemented for `str`
    = note: required because it appears within the type `(ExitStatus, str)`
note: required by a bound in `std::prelude::v1::Ok`
   --> /home/sreehari/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/result.rs:528:17
    |
528 | pub enum Result<T, E> {
    |                 ^ required by this bound in `std::prelude::v1::Ok`
...
532 |     Ok(#[stable(feature = "rust1", since = "1.0.0")] T),
    |     -- required by a bound in this tuple variant

error[E0282]: type annotations needed for `&_`
   --> quantum_launcher/src/menu_renderer/launch.rs:438:13
    |
438 |     .style(|n, status| n.style_button(status, StyleButton::FlatDark))
    |             ^            ------------ type must be known at this point
    |
help: consider giving this closure parameter an explicit type, where the type for type parameter `Theme` is specified
    |
438 |     .style(|n: &Theme, status| n.style_button(status, StyleButton::FlatDark))
    |              ++++++++

error[E0282]: type annotations needed for `&_`
   --> quantum_launcher/src/menu_renderer/launch.rs:465:13
    |
465 |     .style(|n, status| n.style_button(status, StyleButton::FlatExtraDark))
    |             ^            ------------ type must be known at this point
    |
help: consider giving this closure parameter an explicit type, where the type for type parameter `Theme` is specified
    |
465 |     .style(|n: &Theme, status| n.style_button(status, StyleButton::FlatExtraDark))
    |              ++++++++

error[E0282]: type annotations needed for `iced_widget::row::Wrapping<'_, _, _, _>`
   --> quantum_launcher/src/menu_renderer/launch.rs:448:9
    |
448 |     let tab_bar = widget::row(
    |         ^^^^^^^
...
481 |     .style(|n| n.style_container_sharp_box(0.0, Color::ExtraDark))
    |                  ------------------------- type must be known at this point
    |
help: consider giving `tab_bar` an explicit type, where the placeholders `_` are specified
    |
448 |     let tab_bar: iced_widget::row::Wrapping<'_, Message, Theme, Renderer> = widget::row(
    |                ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

error[E0282]: type annotations needed for `&_`
   --> quantum_launcher/src/menu_renderer/mods/jarmods.rs:119:17
    |
119 |         .style(|n| n.style_container_sharp_box(0.0, Color::ExtraDark))
    |                 ^    ------------------------- type must be known at this point
    |
help: consider giving this closure parameter an explicit type, where the placeholders `_` are specified
    |
119 |         .style(|n: &Theme| n.style_container_sharp_box(0.0, Color::ExtraDark))
    |                  ++++++++

error[E0282]: type annotations needed for `&_`
   --> quantum_launcher/src/menu_renderer/mods/mods_store/mod.rs:266:29
    |
266 |                     .style(|n| n.style_container_sharp_box(0.0, Color::ExtraDark)),
    |                             ^    ------------------------- type must be known at this point
    |
help: consider giving this closure parameter an explicit type, where the type for type parameter `Theme` is specified
    |
266 |                     .style(|n: &Theme| n.style_container_sharp_box(0.0, Color::ExtraDark)),
    |                              ++++++++

Some errors have detailed explanations: E0252, E0277, E0282, E0412, E0432, E0433, E0603.
For more information about an error, try `rustc --explain E0252`.
warning: `quantum_launcher` (bin "quantum_launcher") generated 2 warnings
error: could not compile `quantum_launcher` (bin "quantum_launcher") due to 39 previous errors; 2 warnings emitted

Caused by:
  process didn't exit successfully: `/home/sreehari/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rustc --crate-name quantum_launcher --edition=2021 quantum_launcher/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="default"' --cfg 'feature="tiny_skia"' --cfg 'feature="wgpu"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("debug", "default", "simulate_linux_arm64", "tiny_skia", "wgpu"))' -C metadata=5bc06ce2e063ff84 -C extra-filename=-6237bf874b03873f --out-dir /home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps -C incremental=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/incremental -L dependency=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps --extern chrono=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libchrono-a5d98db66ac2e867.rlib --extern clap=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libclap-af30c02d0a68895e.rlib --extern colored=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libcolored-e019f4d22b7e989b.rlib --extern comrak=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libcomrak-028dd55227879897.rlib --extern html5ever=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libhtml5ever-fe2cfce8f19b5c5d.rlib --extern iced=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libiced-709564cd62bd52e4.rlib --extern image=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libimage-eb41199100bdf26a.rlib --extern markup5ever_rcdom=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libmarkup5ever_rcdom-3a5da5ccd3b1d692.rlib --extern paste=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libpaste-d1a070d01ae96c50.so --extern ql_core=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_core-32095810fea4154e.rlib --extern ql_instances=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_instances-8443dead4c1b54a1.rlib --extern ql_mod_manager=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_mod_manager-b4e06fd7c8f6dfc0.rlib --extern ql_packager=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_packager-d225f9ed3d29f3db.rlib --extern ql_servers=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libql_servers-bb493a900c4a4257.rlib --extern rfd=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/librfd-8b0641c0883d7419.rlib --extern serde=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libserde-6c34bb0738b7ecef.rlib --extern serde_json=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libserde_json-383d52f2eb8cba5d.rlib --extern terminal_size=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libterminal_size-e933185ad420bedc.rlib --extern tokio=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libtokio-b3e063ab55ce5f4a.rlib --extern webbrowser=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/deps/libwebbrowser-dc5938ccd1606ea1.rlib -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/ring-28043c2698e2304b/out -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/libdbus-sys-f8ef4b28718f446c/out -L native=/home/sreehari/Projects/bug-fix/quantumlauncher/target/debug/build/libdbus-sys-f8ef4b28718f446c/out` (exit status: 1)
